<style>
    .flip{
        transform: scaleX(-1);
    }

    .matchScoreProgressBar{
        width: 50%;
        height: 30px;
        clip-path: polygon(0% 0%, 95% 0%, 100% 50%, 95% 100%, 0% 105%);
        background-color: black;
    }

    
    .morePoints{
        margin-left: 5px;
        margin-right: 5px;
    }

    .myprogress {
        width: 0%;
        height: 100%;
        clip-path: polygon(0% 0%, 95% 0%, 100% 50%, 95% 100%, 0% 105%);
    }


    .red {
        background-color: @_gameStateService.Teams[TeamColor.RED].ColorCssImportant;
    }
    
    .blue {
        background-color: @_gameStateService.Teams[TeamColor.BLUE].ColorCssImportant;
        border-color: @_gameStateService.Teams[TeamColor.BLUE].ColorCssImportant;
        border: solid 1px;
    }
   
     .timer{
         width: 60px;
         height: 30px;
         background-color: black;
         color: white;

         text-align: center;
         align-content: center;
         font-weight: bold;
     }

     .bar{
        height: 30px;
        background-color: black;

        color: white;
    }

    .topbar {
        width: 60%;
        clip-path: polygon(5% 0%, 95% 0%, 100% 100%, 0% 105%);
        padding-left: 5%;
        padding-right: 5%;
     }

    .bottombar {
        width: 40%;
        clip-path: polygon(0% 0%, 100% -5%, 95% 100%, 5% 100%);
    }

    .gamemode{
        font-size: 10px;
        text-align: center;
        align-content: center;
    }
</style>

<div class="d-flex flex-column align-content-center justify-content-center center">
    <div class="bar topbar align-self-center d-flex justify-content-between text-center">
        <span class="fw-bold">
            @_gameStateService.CurrentGame?.GetDisplayPoints(TeamColor.BLUE)
        </span>
        <span class="gamemode">
            @_gameStateService.CurrentGame?.ToString()
        </span>
        <span class="fw-bold">
            @_gameStateService.CurrentGame?.GetDisplayPoints(TeamColor.RED)
        </span>
    </div>

    <div class="d-flex flex-row align-items-center">

        <div class="matchScoreProgressBar flip">
            <div class="blue myprogress" />
        </div>

        <div class="timer text-center">
            @if(_gameStateService.CurrentGame != null)
            {
                <span>@_gameStateService.CurrentGame?.GetTimer?.ToString(@"mm\:ss")</span>
            }
            else
            {
                <span>PAUSE</span>
            }
        </div>

        <div class="matchScoreProgressBar">
            <div class="red myprogress"/>
        </div>
    </div>

    <div class="bar bottombar align-self-center">
    </div>
</div>

<script>
    function setProgressbar(color, percent){
        var team;
        if(color === 0){
            team = ".red";
        }
        else{
            team = ".blue";
       }
        $(team).animate({width: percent}, "fast");
    };
</script>

@code {

    private string DetermineWinner
    {
        get
        {
            var winner = _gameStateService.CurrentGame?.GetWinner;
            switch (winner)
            {
                case TeamColor.BLUE:
                    return ">";
                case TeamColor.RED:
                    return "<";
                default:
                    return " ";
            }
        }
    }

    private string GetPoints(TeamColor color)
    {
        if (_gameStateService.CurrentGame == null)
            return string.Empty;
        
        return $"{_gameStateService.CurrentGame.GetDisplayPoints(color)}/{_gameStateService.CurrentGame.MaxTickets}";
    }
    
}