@page "/"
@using System.Text.Json;
@using OWLServer.Services
@inject GameStateService GameStateService
@inject ExternalTriggerService ExternalTriggerService

<PageTitle>Home</PageTitle>

<RadzenCard Variant="Variant.Outlined" Style="background-color: yellow">
    <p>GameMode: @GameStateService.CurrentGame?.ToString()</p>
    <p>IsRunning: @GameStateService.CurrentGame?.IsRunning</p>
    <p>Timer: @GameStateService.CurrentGame?.GetTimer?.ToString(@"mm\:ss")</p>
    <p>Voraussichtlicher Sieger: @GameStateService.CurrentGame?.GetWinner()</p>
</RadzenCard>
<br/>

<RadzenRow Orientation="Orientation.Horizontal">
            @foreach (var team in GameStateService.Teams.Values)
            {
                <RadzenColumn>
                    <RadzenCard Style="@team.ColorBackground" Variant="Variant.Outlined">
                        <RadzenStack>
                            <p>Team @team.Name: <br/>
                                @JsonSerializer.Serialize(team)
                                @(GameStateService.CurrentGame?.GetDisplayPoints(team.TeamColor))</p>
                        </RadzenStack>
                    </RadzenCard>
                </RadzenColumn>
            }
</RadzenRow>
<br/>

<RadzenCard Variant="Variant.Outlined" Style="background-color: yellow">
    <RadzenStack>
        <p>Alle Tower:</p> 
        @foreach (var tower in GameStateService.TowerManagerService.Towers.Values)
        {
            <p>@JsonSerializer.Serialize(tower)</p> 
        }
    </RadzenStack>
</RadzenCard>

@code{
    protected override void OnInitialized()
    {
        ExternalTriggerService.StateHasChangedAction += () => InvokeAsync(StateHasChanged);
        base.OnInitialized();
    }
}