@page "/"
@using System.Text.Json;
@using OWLServer.Services
@inject GameStateService GameStateService
@inject ExternalTriggerService ExternalTriggerService



<PageTitle>Home</PageTitle>

<RadzenCard Variant="Variant.Outlined" Style="background-color: yellow">
    <p>GameMode: @GameStateService.CurrentGame?.ToString()</p>
    <p>IsRunning: @GameStateService.CurrentGame?.IsRunning</p>
    <p>Timer: @GameStateService.CurrentGame?.GetTimer?.ToString(@"mm\:ss")</p>
    <p>Aktueller Sieger: @GameStateService.CurrentGame?.GetWinner()</p>
</RadzenCard>
<br/>
<RadzenRow Orientation="Orientation.Horizontal">
    <RadzenColumn>
        <RadzenCard Variant="Variant.Outlined" Style="background-color: lightcoral">
            <RadzenStack>
                <p>Team Rot: <br/>
                    @JsonSerializer.Serialize(GameStateService.Teams[TeamColor.RED])</p>

                @(GameStateService.CurrentGame?.GetDisplayPoints(TeamColor.RED))
            </RadzenStack>
        </RadzenCard>
    </RadzenColumn>
    <RadzenColumn>
        <RadzenCard Variant="Variant.Outlined" Style="background-color: lightgreen">
            <RadzenStack>
                <p>Team Grün: <br/>
                    @JsonSerializer.Serialize(GameStateService.Teams[TeamColor.GREEN])</p>

                @(GameStateService.CurrentGame?.GetDisplayPoints(TeamColor.GREEN))
            </RadzenStack>
        </RadzenCard>
    </RadzenColumn>
</RadzenRow>
<br/>

<RadzenCard Variant="Variant.Outlined" Style="background-color: yellow">
    <RadzenStack>
        <p>Alle Tower:</p> <br/>
        @foreach (var tower in GameStateService.TowerManagerService.Towers.Values)
        {
            <p>@JsonSerializer.Serialize(tower)</p> <br/>
        }
    </RadzenStack>
</RadzenCard>

@code{

    protected override void OnInitialized()
    {
        ExternalTriggerService.StateHasChangedAction += () => InvokeAsync(StateHasChanged);
        base.OnInitialized();
    }

}